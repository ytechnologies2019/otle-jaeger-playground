{"version":3,"file":"config.js","sourceRoot":"","sources":["../../../src/platform/config.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAAE,MAAM,EAAE,MAAM,qBAAqB,CAAC;AAC7C,OAAO,EACL,uBAAuB,EACvB,2BAA2B,GAE5B,MAAM,mCAAmC,CAAC;AAE3C,MAAM,+BAA+B,GAAG,SAAS,CAAC;AAClD,MAAM,CAAC,MAAM,qBAAqB,GAAG,yBAAyB,+BAA+B,EAAE,CAAC;AAEhG;;;;GAIG;AACH,MAAM,UAAU,aAAa,CAAC,MAA8B;IAC1D,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;QAClC,OAAO,MAAM,CAAC,GAAG,CAAC;KACnB;IAED,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC;IACrB,IAAI,GAAG,CAAC,gCAAgC,CAAC,MAAM,GAAG,CAAC,EAAE;QACnD,OAAO,2BAA2B,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;KAC1E;IAED,IAAI,GAAG,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;QAC9C,OAAO,uBAAuB,CAC5B,GAAG,CAAC,2BAA2B,EAC/B,+BAA+B,CAChC,CAAC;KACH;IAED,OAAO,qBAAqB,CAAC;AAC/B,CAAC","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getEnv } from '@opentelemetry/core';\nimport {\n  appendResourcePathToUrl,\n  appendRootPathToUrlIfNeeded,\n  OTLPExporterConfigBase,\n} from '@opentelemetry/otlp-exporter-base';\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/logs';\nexport const DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\n\n/**\n * common get default url\n * @param config exporter config\n * @returns url string\n */\nexport function getDefaultUrl(config: OTLPExporterConfigBase): string {\n  if (typeof config.url === 'string') {\n    return config.url;\n  }\n\n  const env = getEnv();\n  if (env.OTEL_EXPORTER_OTLP_LOGS_ENDPOINT.length > 0) {\n    return appendRootPathToUrlIfNeeded(env.OTEL_EXPORTER_OTLP_LOGS_ENDPOINT);\n  }\n\n  if (env.OTEL_EXPORTER_OTLP_ENDPOINT.length > 0) {\n    return appendResourcePathToUrl(\n      env.OTEL_EXPORTER_OTLP_ENDPOINT,\n      DEFAULT_COLLECTOR_RESOURCE_PATH\n    );\n  }\n\n  return DEFAULT_COLLECTOR_URL;\n}\n"]}