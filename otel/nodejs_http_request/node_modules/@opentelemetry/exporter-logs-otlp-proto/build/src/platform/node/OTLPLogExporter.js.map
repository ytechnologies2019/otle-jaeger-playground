{"version":3,"file":"OTLPLogExporter.js","sourceRoot":"","sources":["../../../../src/platform/node/OTLPLogExporter.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,8CAA2D;AAC3D,0EAM2C;AAC3C,sEAGyC;AAGzC,2CAAwC;AAExC,MAAM,UAAU,GAAG;IACjB,YAAY,EAAE,iCAAiC,iBAAO,EAAE;CACzD,CAAC;AAEF,MAAM,+BAA+B,GAAG,SAAS,CAAC;AAClD,MAAM,qBAAqB,GAAG,yBAAyB,+BAA+B,EAAE,CAAC;AAEzF;;GAEG;AACH,MAAa,eACX,SAAQ,yCAAmE;IAG3E,YAAY,SAAiC,EAAE;QAC7C,KAAK,CAAC,MAAM,EAAE,yCAAsB,8DAC/B,mBAAY,CAAC,uBAAuB,CACrC,IAAA,aAAM,GAAE,CAAC,+BAA+B,CACzC,GACE,IAAA,iCAAY,EAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,OAAO,CAAC,GAC7B,UAAU,KACb,cAAc,EAAE,wBAAwB,IACxC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,MAA8B;QAC1C,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;YAClC,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;QAED,MAAM,GAAG,GAAG,IAAA,aAAM,GAAE,CAAC;QACrB,IAAI,GAAG,CAAC,gCAAgC,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,OAAO,IAAA,gDAA2B,EAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC;SAC1E;QAED,IAAI,GAAG,CAAC,2BAA2B,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9C,OAAO,IAAA,4CAAuB,EAC5B,GAAG,CAAC,2BAA2B,EAC/B,+BAA+B,CAChC,CAAC;SACH;QAED,OAAO,qBAAqB,CAAC;IAC/B,CAAC;CACF;AAlCD,0CAkCC","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getEnv, baggageUtils } from '@opentelemetry/core';\nimport {\n  OTLPExporterConfigBase,\n  appendResourcePathToUrl,\n  appendRootPathToUrlIfNeeded,\n  OTLPExporterNodeBase,\n  parseHeaders,\n} from '@opentelemetry/otlp-exporter-base';\nimport {\n  IExportLogsServiceResponse,\n  ProtobufLogsSerializer,\n} from '@opentelemetry/otlp-transformer';\n\nimport { ReadableLogRecord, LogRecordExporter } from '@opentelemetry/sdk-logs';\nimport { VERSION } from '../../version';\n\nconst USER_AGENT = {\n  'User-Agent': `OTel-OTLP-Exporter-JavaScript/${VERSION}`,\n};\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/logs';\nconst DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\n\n/**\n * Collector Trace Exporter for Node\n */\nexport class OTLPLogExporter\n  extends OTLPExporterNodeBase<ReadableLogRecord, IExportLogsServiceResponse>\n  implements LogRecordExporter\n{\n  constructor(config: OTLPExporterConfigBase = {}) {\n    super(config, ProtobufLogsSerializer, {\n      ...baggageUtils.parseKeyPairsIntoRecord(\n        getEnv().OTEL_EXPORTER_OTLP_LOGS_HEADERS\n      ),\n      ...parseHeaders(config?.headers),\n      ...USER_AGENT,\n      'Content-Type': 'application/x-protobuf',\n    });\n  }\n\n  getDefaultUrl(config: OTLPExporterConfigBase): string {\n    if (typeof config.url === 'string') {\n      return config.url;\n    }\n\n    const env = getEnv();\n    if (env.OTEL_EXPORTER_OTLP_LOGS_ENDPOINT.length > 0) {\n      return appendRootPathToUrlIfNeeded(env.OTEL_EXPORTER_OTLP_LOGS_ENDPOINT);\n    }\n\n    if (env.OTEL_EXPORTER_OTLP_ENDPOINT.length > 0) {\n      return appendResourcePathToUrl(\n        env.OTEL_EXPORTER_OTLP_ENDPOINT,\n        DEFAULT_COLLECTOR_RESOURCE_PATH\n      );\n    }\n\n    return DEFAULT_COLLECTOR_URL;\n  }\n}\n"]}