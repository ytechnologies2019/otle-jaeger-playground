{"version":3,"file":"OTLPLogExporter.js","sourceRoot":"","sources":["../../../../src/platform/browser/OTLPLogExporter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,OAAO,EAEL,uBAAuB,GACxB,MAAM,mCAAmC,CAAC;AAC3C,OAAO,EAEL,sBAAsB,GACvB,MAAM,iCAAiC,CAAC;AAIzC,MAAM,+BAA+B,GAAG,SAAS,CAAC;AAClD,MAAM,qBAAqB,GAAG,yBAAyB,+BAA+B,EAAE,CAAC;AAEzF;;GAEG;AACH,MAAM,OAAO,eACX,SAAQ,uBAAsE;IAG9E,YAAY,SAAiC,EAAE;QAC7C,KAAK,CAAC,MAAM,EAAE,sBAAsB,EAAE,wBAAwB,CAAC,CAAC;IAClE,CAAC;IAED,aAAa,CAAC,MAA8B;QAC1C,IAAI,OAAO,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;YAClC,OAAO,MAAM,CAAC,GAAG,CAAC;SACnB;QAED,OAAO,qBAAqB,CAAC;IAC/B,CAAC;CACF","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  OTLPExporterConfigBase,\n  OTLPExporterBrowserBase,\n} from '@opentelemetry/otlp-exporter-base';\nimport {\n  IExportLogsServiceResponse,\n  ProtobufLogsSerializer,\n} from '@opentelemetry/otlp-transformer';\n\nimport { ReadableLogRecord, LogRecordExporter } from '@opentelemetry/sdk-logs';\n\nconst DEFAULT_COLLECTOR_RESOURCE_PATH = 'v1/logs';\nconst DEFAULT_COLLECTOR_URL = `http://localhost:4318/${DEFAULT_COLLECTOR_RESOURCE_PATH}`;\n\n/**\n * Collector Trace Exporter for Web\n */\nexport class OTLPLogExporter\n  extends OTLPExporterBrowserBase<ReadableLogRecord, IExportLogsServiceResponse>\n  implements LogRecordExporter\n{\n  constructor(config: OTLPExporterConfigBase = {}) {\n    super(config, ProtobufLogsSerializer, 'application/x-protobuf');\n  }\n\n  getDefaultUrl(config: OTLPExporterConfigBase): string {\n    if (typeof config.url === 'string') {\n      return config.url;\n    }\n\n    return DEFAULT_COLLECTOR_URL;\n  }\n}\n"]}